par(mar=c(4,4,1.75,1.75))
N = 10000 #The number of samples from the Inverse Maxwell distribution
rIND=
function (N=100, sigma){
rand.samples = rep(NA,N)#Variable to store the samples from the IMD distribution
for(i in 1:N){
rand.samples[i] = 1/(sigma*sqrt(2*rgamma(1,3/2,1)))
}
rand.samples
}
plot(density(rIND(N, .02)),
main= " ",
xlab = expression("R"),
xlim = c(5,90 ),
ylim = c(0, .11), col="violetred2",lwd=2,lty=2)
lines(density(rIND(N,.04)),col="springgreen3",lwd=2,lty=3)
lines(density(rIND(N,.06)),col="royalblue",lwd=2,lty=5)
legend(64,.10, c(expression(paste(sigma," = 0.02")),
expression(paste(sigma," = 0.04")),
expression(paste(sigma," = 0.06"))),
col=c("violetred2","springgreen3","royalblue"),
lwd=c(2,2,2),lty=c(2,3,5),cex=1,bty = "n")
###Building control limits
n=6
t=1:20
lamda=0.25
L=2.844981
x1=2/(3*n)
x2=lamda/(2-lamda)
x3=(1-(1-lamda)^t)
W1=1-(L*sqrt(x1*x2*x3))
W1
W2=1+(L*sqrt(x1*x2*x3))
W2
####constructing function to generate random numbers
N = 6 #The number of samples from the Inverse Maxwell distribution
rIND=
function (N, sigma){
rand.samples = rep(NA,N)#Variable to store the samples from the IMD distribution
for(i in 1:N){
rand.samples[i] = 1/(sigma*sqrt(2*rgamma(1,3/2,1)))
}
rand.samples
}
###generate random numbers
G1=rIND(N, .02)
G2=rIND(N, .02)
G3=rIND(N, .02)
G4=rIND(N, .02)
G5=rIND(N, .02)
G6=rIND(N, .02)
G7=rIND(N, .02)
G8=rIND(N, .02)
G9=rIND(N, .02)
G10=rIND(N, .02)
G11=rIND(N, .02)
G12=rIND(N, .02)
G13=rIND(N, .02)
G14=rIND(N, .02)
G15=rIND(N, .02)
G16=rIND(N, .02)
G17=rIND(N, .02)
G18=rIND(N, .02)
G19=rIND(N, .02)
G20=rIND(N, .02)
sigma1=sqrt((1/18)*sum(1/(G1)^2))
sigma2=sqrt((1/18)*sum(1/(G2)^2))
sigma3=sqrt((1/18)*sum(1/(G3)^2))
sigma4=sqrt((1/18)*sum(1/(G4)^2))
sigma5=sqrt((1/18)*sum(1/(G5)^2))
sigma6=sqrt((1/18)*sum(1/(G6)^2))
sigma7=sqrt((1/18)*sum(1/(G7)^2))
sigma8=sqrt((1/18)*sum(1/(G8)^2))
sigma9=sqrt((1/18)*sum(1/(G9)^2))
sigma10=sqrt((1/18)*sum(1/(G10)^2))
sigma11=sqrt((1/18)*sum(1/(G11)^2))
sigma12=sqrt((1/18)*sum(1/(G12)^2))
sigma13=sqrt((1/18)*sum(1/(G13)^2))
sigma14=sqrt((1/18)*sum(1/(G14)^2))
sigma15=sqrt((1/18)*sum(1/(G15)^2))
sigma16=sqrt((1/18)*sum(1/(G16)^2))
sigma17=sqrt((1/18)*sum(1/(G17)^2))
sigma18=sqrt((1/18)*sum(1/(G18)^2))
sigma19=sqrt((1/18)*sum(1/(G19)^2))
sigma20=sqrt((1/18)*sum(1/(G20)^2))
sigma_bar=(sigma1+sigma2+sigma3+sigma4+sigma5+sigma6+sigma7+sigma8+sigma9+sigma10+sigma11+sigma12+sigma13+sigma14+sigma15+sigma16+sigma17+sigma18+sigma19+sigma20)/20
z1=(lamda*sigma1)+((1-lamda)*sigma_bar)
z2=(lamda*sigma2)+((1-lamda)*z1)
z3=(lamda*sigma3)+((1-lamda)*z2)
z4=(lamda*sigma4)+((1-lamda)*z3)
z5=(lamda*sigma5)+((1-lamda)*z4)
z6=(lamda*sigma6)+((1-lamda)*z5)
z7=(lamda*sigma7)+((1-lamda)*z6)
z8=(lamda*sigma8)+((1-lamda)*z7)
z9=(lamda*sigma9)+((1-lamda)*z8)
z10=(lamda*sigma10)+((1-lamda)*z9)
z11=(lamda*sigma11)+((1-lamda)*z10)
z12=(lamda*sigma12)+((1-lamda)*z11)
z13=(lamda*sigma13)+((1-lamda)*z12)
z14=(lamda*sigma14)+((1-lamda)*z13)
z15=(lamda*sigma15)+((1-lamda)*z14)
z16=(lamda*sigma16)+((1-lamda)*z15)
z17=(lamda*sigma17)+((1-lamda)*z16)
z18=(lamda*sigma18)+((1-lamda)*z17)
z19=(lamda*sigma19)+((1-lamda)*z18)
z20=(lamda*sigma20)+((1-lamda)*z19)
###Building control limits
n=6
t=1:20
lamda=0.25
L=2.844981
x1=2/(3*n)
x2=lamda/(2-lamda)
x3=(1-(1-lamda)^t)
W1=1-(L*sqrt(x1*x2*x3))
W1
W2=1+(L*sqrt(x1*x2*x3))
W2
####constructing function to generate random numbers
N = 6 #The number of samples from the Inverse Maxwell distribution
rIND=
function (N, sigma){
rand.samples = rep(NA,N)#Variable to store the samples from the IMD distribution
for(i in 1:N){
rand.samples[i] = 1/(sigma*sqrt(2*rgamma(1,3/2,1)))
}
rand.samples
}
###generate random numbers
G1=rIND(N, .02)
G2=rIND(N, .02)
G3=rIND(N, .02)
G4=rIND(N, .02)
G5=rIND(N, .02)
G6=rIND(N, .02)
G7=rIND(N, .02)
G8=rIND(N, .02)
G9=rIND(N, .02)
G10=rIND(N, .02)
G11=rIND(N, .02)
G12=rIND(N, .02)
G13=rIND(N, .02)
G14=rIND(N, .02)
G15=rIND(N, .02)
G16=rIND(N, .02)
G17=rIND(N, .02)
G18=rIND(N, .02)
G19=rIND(N, .02)
G20=rIND(N, .02)
sigma1=sqrt((1/18)*sum(1/(G1)^2))
sigma2=sqrt((1/18)*sum(1/(G2)^2))
sigma3=sqrt((1/18)*sum(1/(G3)^2))
sigma4=sqrt((1/18)*sum(1/(G4)^2))
sigma5=sqrt((1/18)*sum(1/(G5)^2))
sigma6=sqrt((1/18)*sum(1/(G6)^2))
sigma7=sqrt((1/18)*sum(1/(G7)^2))
sigma8=sqrt((1/18)*sum(1/(G8)^2))
sigma9=sqrt((1/18)*sum(1/(G9)^2))
sigma10=sqrt((1/18)*sum(1/(G10)^2))
sigma11=sqrt((1/18)*sum(1/(G11)^2))
sigma12=sqrt((1/18)*sum(1/(G12)^2))
sigma13=sqrt((1/18)*sum(1/(G13)^2))
sigma14=sqrt((1/18)*sum(1/(G14)^2))
sigma15=sqrt((1/18)*sum(1/(G15)^2))
sigma16=sqrt((1/18)*sum(1/(G16)^2))
sigma17=sqrt((1/18)*sum(1/(G17)^2))
sigma18=sqrt((1/18)*sum(1/(G18)^2))
sigma19=sqrt((1/18)*sum(1/(G19)^2))
sigma20=sqrt((1/18)*sum(1/(G20)^2))
sigma_bar=(sigma1+sigma2+sigma3+sigma4+sigma5+sigma6+sigma7+sigma8+sigma9+sigma10+sigma11+sigma12+sigma13+sigma14+sigma15+sigma16+sigma17+sigma18+sigma19+sigma20)/20
z1=(lamda*sigma1)+((1-lamda)*sigma_bar)
z2=(lamda*sigma2)+((1-lamda)*z1)
z3=(lamda*sigma3)+((1-lamda)*z2)
z4=(lamda*sigma4)+((1-lamda)*z3)
z5=(lamda*sigma5)+((1-lamda)*z4)
z6=(lamda*sigma6)+((1-lamda)*z5)
z7=(lamda*sigma7)+((1-lamda)*z6)
z8=(lamda*sigma8)+((1-lamda)*z7)
z9=(lamda*sigma9)+((1-lamda)*z8)
z10=(lamda*sigma10)+((1-lamda)*z9)
z11=(lamda*sigma11)+((1-lamda)*z10)
z12=(lamda*sigma12)+((1-lamda)*z11)
z13=(lamda*sigma13)+((1-lamda)*z12)
z14=(lamda*sigma14)+((1-lamda)*z13)
z15=(lamda*sigma15)+((1-lamda)*z14)
z16=(lamda*sigma16)+((1-lamda)*z15)
z17=(lamda*sigma17)+((1-lamda)*z16)
z18=(lamda*sigma18)+((1-lamda)*z17)
z19=(lamda*sigma19)+((1-lamda)*z18)
z20=(lamda*sigma20)+((1-lamda)*z19)
#plotting statistic
ZIM1=c(0.0240, 0.0270, 0.0275, 0.0263,0.0272,0.0282,0.0262,0.0287, 0.0296,0.0310)
ZIM2=c( 0.0260,0.0255,0.0273, 0.0235, 0.0296,0.0315,0.0322, 0.0300,0.0291 ,0.0330)
ZIM=c(ZIM1,1.60*ZIM2)
#EWMA control limits
UCL=W2*sigma_bar
CL=sigma_bar
LCL=W1*sigma_bar
#EWMA control chart
par(mar=c(4,4,1.75,1.75))
xtick<-c(3,5,7,10,13,15,17,20)
plot((0.75*ZIM),type ="b", ylim=c(0,.050),xlim=c(1,20),ylab = "Plotting Statistic",xlab = "Sample number",col="springgreen3",pch=15)
abline(h =sigma_bar , col = "red", lty = 1, lwd = 1)
lines(LCL,col="green",lwd=2,lty=2)
lines(UCL,col="blue",lwd=2,lty=3)
axis(side=1, at=xtick, labels = TRUE)
legend(1,0.053,legend = c("Z",expression('Q')),pch = c(15,16),bty = "n",cex = 0.9,col =c("springgreen3","brown4") )
legend(3,0.053,
c(expression('LCL'[IMEWMA]),
expression('UCL'[IMEWMA]),
expression('CL'[IMEWMA])),
col = c("green","blue","red"),
lwd = c(2,2,2),lty = c(2,3,1), bty = "n",horiz = T,cex = 0.9)
legend(3,0.0498,expression('UCL'['EWMA CEV']),col = "blue",
lwd = 2,lty = 5, bty = "n",horiz = T,cex = 0.9)
####################
sigma_s1=c(0.87*sigma1,0.99*sigma2,0.37*sigma3,0.39*sigma4,0.78*sigma5,0.71*sigma6,0.49*sigma7,0.42*sigma8,0.67*sigma9,0.53*sigma10)
sigma_s2=c(0.33*sigma11,0.43*sigma12,0.29*sigma13,0.20*sigma14,0.42*sigma15,0.35*sigma16,0.41*sigma17,0.49*sigma18,0.30*sigma19,0.41*sigma20)
sigma_s=c(0.8*sigma_s1,2.60*sigma_s2)
lines((sigma_s),type="b",lwd=1,lty=1,pch=16,col="brown4")
UCL1<-1.167*0.0247
abline(h=UCL1,col="blue",lwd=2,lty=5)
